# Copyright 2017 The Kubernetes Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Namespace
metadata:
  name: kubernetes-dashboard

---

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard

---

kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
spec:
  ports:
    - port: 443
      targetPort: 8443
      nodePort: 32000
  type: NodePort
  selector:
    k8s-app: kubernetes-dashboard

---
kind: Secret
apiVersion: v1
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard-certs
  namespace: kubernetes-dashboard
data:
  dashboard.crt:
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNmakNDQVdZQ0NRQzg0UDU2WFhzNEF6QU5CZ2txaGtpRzl3MEJBUXNGQURBQU1DQVhEVEU1TVRBeU9ERXoKTVRrMU0xb1lEekl4TVRreE1EQTBNVE14T1RVeldqQUFNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QQpNSUlCQ2dLQ0FRRUFuRFY4dlJpMlFnczZQQ1U3czl1QlVCMDZPSFc0Nkg2UnJMTDRndXJkYnpHRUw0NDl2OUlRCkszTDMyWWtlWlpIa25veFRVdWd3dERibFdQN0NHdjdDaStwN1RqYkZwZlVpMGc5ZDEvWUxVaUlPaHNFRUc3YzIKTElISnkvaXdVakNVQUdWNDFKR0FjUmtyUjVLNi9hZU5SS0NobXY2UHdkL1N6WUJxQnR3aVdGTFc3eW5CWGZRQwpwYndoazQ0OUR2WHJlWVU4aTRWcXVrWEh1aDVVVWlOcjlBTFRTUnQ1K0ZnWE9zbEl6VHVUUzQ1NDRJdGdzM2dSCmt5cmZ0MWo0VWFDdzJpS3Fud0FuR0JldUlSdHp1Z0liWkpYVStldWhyRHdEQW1jL1FnMUJZWkloaGVtcVQ1dTkKY2g2Uk8wSzJ5bUhzem5wY1dSQmFaNStVZHdpTXNrWDJ2d0lEQVFBQk1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQgpBUUFIYUp4QUp3VGI3RlFScG4zRVhvSVRJTGdOaGhVMjJBcEVGQjBYVncyYkcyRUI2bXhDckVNWFk0YmcvcnlECm5RVW4rL0JFcUVGQ1h6S1JPNlZ2enRsbFdSUVZpdnQwQnJaS242Q0Mzazk4U1RvV05oL0dySjRkajRBeFZzaHcKUThMR0NlUzAxczFDWWpzV1JOdXJLNk9BQW94SjNhYnhHMWE2ZG5KZ29pbHJwUlhOcWNnQTVjWHB5Uk5rcllTTgpYL0RIaU9OaFZLSGMrV1JiNkdNcUtZM3R2aXY5MUdsQWFUcm5EK0ludHZ0TUZERVlLdktvNDRSR2ttdUNuYWVpCngyWlJLWitPSlRPR2c2Y1MxWXRpUVdWSGJRZ2k3bnNDVE1hT2RPK0NCWHJXd0d0MXJKSE1leUlqdGk4Z0FKb0wKQmtiYzdyelJ0d0FaSjVwQ2tmeWRIeTdjCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  dashboard.csr:
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURSBSRVFVRVNULS0tLS0KTUlJQ1JUQ0NBUzBDQVFBd0FEQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUp3MQpmTDBZdGtJTE9qd2xPN1BiZ1ZBZE9qaDF1T2gra2F5eStJTHEzVzh4aEMrT1BiL1NFQ3R5OTltSkhtV1I1SjZNClUxTG9NTFEyNVZqK3docit3b3ZxZTA0MnhhWDFJdElQWGRmMkMxSWlEb2JCQkJ1M05peUJ5Y3Y0c0ZJd2xBQmwKZU5TUmdIRVpLMGVTdXYybmpVU2dvWnIrajhIZjBzMkFhZ2JjSWxoUzF1OHB3VjMwQXFXOElaT09QUTcxNjNtRgpQSXVGYXJwRng3b2VWRklqYS9RQzAwa2JlZmhZRnpySlNNMDdrMHVPZU9DTFlMTjRFWk1xMzdkWStGR2dzTm9pCnFwOEFKeGdYcmlFYmM3b0NHMlNWMVBucm9hdzhBd0puUDBJTlFXR1NJWVhwcWsrYnZYSWVrVHRDdHNwaDdNNTYKWEZrUVdtZWZsSGNJakxKRjlyOENBd0VBQWFBQU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQnlzWlVQZzVpMwp3WnZ6cGF6RW5aQno0N2pGSDAvbmR0a3ZDM2lDdTcyYk1BRjlSK0FEK2Fyb3FwRHRKa2cxSURWdmhUV09QdzhDCkIwMGZJQXBzYXJheFdHR3VnbjlVNjQ5OUNYL3Voc05kZlNmMSs3bXE1Sjh0c25VS3E2UWFJVnZaU3Boa0hGbzQKOUQxKzNFK3VhMW1VakpjbzQ5N3Q3V0dGeU5SellBUWFRRGV6MEllZ0ZvQkQxUWNVODFpaEt4Wk01TWc1M3l5QwpvcHYvZExSaHdxM2FjS2FwMDBtQ2hXTTNlVkN3dUZYUG5wOXhiZDZpanhxQ2dDNUF4SUMyU081SW1na21oYjJuCm1nejdlUUhIN2c0bFYyQWkxNlJrUGpiM0VZMDRuemdhcSsyZTJDMjRwL1dWa2xaWlh1Y0VLeVh1bEVOYVFUS2gKTUkrQzZsT3YycVRMCi0tLS0tRU5EIENFUlRJRklDQVRFIFJFUVVFU1QtLS0tLQo=
  dashboard.key:
    LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBbkRWOHZSaTJRZ3M2UENVN3M5dUJVQjA2T0hXNDZINlJyTEw0Z3VyZGJ6R0VMNDQ5CnY5SVFLM0wzMllrZVpaSGtub3hUVXVnd3REYmxXUDdDR3Y3Q2krcDdUamJGcGZVaTBnOWQxL1lMVWlJT2hzRUUKRzdjMkxJSEp5L2l3VWpDVUFHVjQxSkdBY1JrclI1SzYvYWVOUktDaG12NlB3ZC9TellCcUJ0d2lXRkxXN3luQgpYZlFDcGJ3aGs0NDlEdlhyZVlVOGk0VnF1a1hIdWg1VVVpTnI5QUxUU1J0NStGZ1hPc2xJelR1VFM0NTQ0SXRnCnMzZ1JreXJmdDFqNFVhQ3cyaUtxbndBbkdCZXVJUnR6dWdJYlpKWFUrZXVockR3REFtYy9RZzFCWVpJaGhlbXEKVDV1OWNoNlJPMEsyeW1Ic3pucGNXUkJhWjUrVWR3aU1za1gydndJREFRQUJBb0lCQVFDS3lhc09oNHBIbTVvZQpIaWF4WW5HK01IbXQrRXBWcHo3ZTVoU09uUVlvNlNHODd2QkdJZWxqOFQzczlUc2dtME00Nnd5Tk9PY3M5eWxHCnJQTGc4VUVBOTFDZTZXTXFWR2FmcEMrSTFYNnhkcmpaV1Z6QkUwTDZ3RVgvQi9JQTFGQnJHYjBGZ0ZGU0t6NmMKMU8xMnVRdDIwaEZEbUxFNVhCZjdwZ0NPSDhBVUlBSjh4RnF5aUFya2NBV01jRkNjcVpVamo5aThocWhxMkRoNwpXSk85SlJ0bksyRUhTemxjbTU1TE0zVEM2MlF1aE1PZXBiRTNnY3NxRWNxK3BVdjZ4OXVRaDBHUkljejI0cHpKCkZWYnowK2k4WXc2UFRMemRZeENrY3JoVEIvUlVFcEtMMjN4UWlpb1gwYmVtcXBYb253MFpVbWhaT0NYSXh4N0UKT0ppek1jVmhBb0dCQU00WkVsZm5MTFphb1hYeFJLR0dTRTlUMDBFdmJjanhBOWM0U3hnZjJqMGkzeE9ER3JjMwpQSlRCTjJUTm03akh0Z00ySVpOS1ExZ0NFaUdLM3Y1c1BMR3JpM05VTm9LMzRxOW9Ed1VzNEplZ0EyK2gzMUxCCklFS2NNL2JmOVI5d2lMRWQwK0o3Y3plOTlVdVN2d01ZditPMjMrYWtsSHZMK3liWCttZktPYlJOQW9HQkFNSUkKRHZrWUZVMnVPVkJ1UW9RSTN1bk5XekdGNmlIN1Z2NHc0N2VnRW1IaXRxVDZhSVA1RDlyZUZZRTFFVmNhamNNbgpBUzhDR25VSTJuZVUyWFR4KzZHRVhPMDMwS3JUcmNjQytJODRsUTF5bXE3NzRmcGErVGlqR29TcEVmOTBpRlFWCkZtNDF6WHhBVnlPS0pxL1VGR3pXcllpR0VuYVZIU2lMMWlWcTE0MDdBb0dCQUlNcTliKzRRMzZ6WTd0YW1HRnMKd3l5cG52UUhxWW1QeXUvNHhlSk9zMmpoZnJRK1pveGd2VSszUVBnSTI2allnZ0M5UE5VdkdIazBxREZzM3N0eQpPNWFnSlJwN2FFMzlsbW9vZ2hhN0h4MmhHMDY2NlJVVUVPSVQ1QWFsTnE2UndvMW0vR2xTUkZ3ZnE3UXpheG9mCmNGRVBIS1QvN2ZoME5CM2VxMkhQRkxhcEFvR0FPZTVNQWlVbG55YklaL0l6bTlaR0w4b25VeGJuZTdQZUdsQ2cKZkorblBXQ0NKYW01OE1VNDdhRG5ETWU2WUtaRjh5RS9JampmaTFmVVdtV3ZzMUhZVGpZRnhMR29kSWgwMXZsVgpHdlhLMHRRSHlQemRVSEUrL2FEODl1Uy93ZVNhRzNpY1ZOVnRmNDU2TmRzMmg4S3JRbitxR2h2bGdWQXQvNEFZCnROMDhkQ2NDZ1lCL24yUkwzUis1Ykh3Ym10OEdncEtrWVVPaGhUNDlUYUtVSGk1Z0RieTMzbmh3T3JpVE84dHgKc1lVdmhESkJxWTlYT2d1Y3ZsYzRGem1NeHg0d3pEMU13ZUFKcmVLZTlrZGxHUSszb1d1c2RjamFNU21La1FmagplMUN3K0h1a002REdYUS9mYkRYNGlQSFBaUTAvWEJoRGJzQUVocVVOS29KZGpodyswbzVkRHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
type: Opaque
---

apiVersion: v1
kind: Secret
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard-csrf
  namespace: kubernetes-dashboard
type: Opaque
data:
  csrf: ""

---

apiVersion: v1
kind: Secret
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard-key-holder
  namespace: kubernetes-dashboard
type: Opaque

---

kind: ConfigMap
apiVersion: v1
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard-settings
  namespace: kubernetes-dashboard

---

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
rules:
  # Allow Dashboard to get, update and delete Dashboard exclusive secrets.
  - apiGroups: [""]
    resources: ["secrets"]
    resourceNames: ["kubernetes-dashboard-key-holder", "kubernetes-dashboard-certs", "kubernetes-dashboard-csrf"]
    verbs: ["get", "update", "delete"]
    # Allow Dashboard to get and update 'kubernetes-dashboard-settings' config map.
  - apiGroups: [""]
    resources: ["configmaps"]
    resourceNames: ["kubernetes-dashboard-settings"]
    verbs: ["get", "update"]
    # Allow Dashboard to get metrics.
  - apiGroups: [""]
    resources: ["services"]
    resourceNames: ["heapster", "dashboard-metrics-scraper"]
    verbs: ["proxy"]
  - apiGroups: [""]
    resources: ["services/proxy"]
    resourceNames: ["heapster", "http:heapster:", "https:heapster:", "dashboard-metrics-scraper", "http:dashboard-metrics-scraper"]
    verbs: ["get"]

---

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
rules:
  # Allow Metrics Scraper to get metrics from the Metrics server
  - apiGroups: ["metrics.k8s.io"]
    resources: ["pods", "nodes"]
    verbs: ["get", "list", "watch"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubernetes-dashboard
subjects:
  - kind: ServiceAccount
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubernetes-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  #name: kubernetes-dashboard
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: kubernetes-dashboard
    namespace: kubernetes-dashboard

---

kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: kubernetes-dashboard
  name: kubernetes-dashboard
  namespace: kubernetes-dashboard
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: kubernetes-dashboard
  template:
    metadata:
      labels:
        k8s-app: kubernetes-dashboard
    spec:
      containers:
        - name: kubernetes-dashboard
          image: kubernetesui/dashboard:v2.0.0-beta5
          ports:
            - containerPort: 8443
              protocol: TCP
          args:
            - --auto-generate-certificates
            - --namespace=kubernetes-dashboard
            # Uncomment the following line to manually specify Kubernetes API server Host
            # If not specified, Dashboard will attempt to auto discover the API server and connect
            # to it. Uncomment only if the default does not work.
            # - --apiserver-host=http://my-address:port
          volumeMounts:
            - name: kubernetes-dashboard-certs
              mountPath: /certs
              # Create on-disk volume to store exec logs
            - mountPath: /tmp
              name: tmp-volume
          livenessProbe:
            httpGet:
              scheme: HTTPS
              path: /
              port: 8443
            initialDelaySeconds: 30
            timeoutSeconds: 30
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1001
            runAsGroup: 2001
      volumes:
        - name: kubernetes-dashboard-certs
          secret:
            secretName: kubernetes-dashboard-certs
        - name: tmp-volume
          emptyDir: {}
      serviceAccountName: kubernetes-dashboard
      nodeSelector:
        "beta.kubernetes.io/os": linux
      # Comment the following tolerations if Dashboard must not be deployed on master
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule

---

kind: Service
apiVersion: v1
metadata:
  labels:
    k8s-app: dashboard-metrics-scraper
  name: dashboard-metrics-scraper
  namespace: kubernetes-dashboard
spec:
  ports:
    - port: 8000
      targetPort: 8000
  selector:
    k8s-app: dashboard-metrics-scraper

---

kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    k8s-app: dashboard-metrics-scraper
  name: dashboard-metrics-scraper
  namespace: kubernetes-dashboard
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: dashboard-metrics-scraper
  template:
    metadata:
      labels:
        k8s-app: dashboard-metrics-scraper
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: 'runtime/default'
    spec:
      containers:
        - name: dashboard-metrics-scraper
          image: kubernetesui/metrics-scraper:v1.0.1
          ports:
            - containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              scheme: HTTP
              path: /
              port: 8000
            initialDelaySeconds: 30
            timeoutSeconds: 30
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsUser: 1001
            runAsGroup: 2001
      serviceAccountName: kubernetes-dashboard
      nodeSelector:
        "beta.kubernetes.io/os": linux
      # Comment the following tolerations if Dashboard must not be deployed on master
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      volumes:
        - name: tmp-volume
          emptyDir: {}
